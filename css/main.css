@import url('https://fonts.googleapis.com/css?family=Alegreya');

html,body {
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
    hyphens: manual;
    font-family: "Alegreya", serif;
    font-size: 24px;
    /* font-size: calc(19px + (28px - 19px) * ((100vw - 360px) / (2460px - 360px))); */
    font-size: calc(19px + 9 * ((100vw - 360px) / 2100));
}

html {
    height: 100%;
    /* CSS variables are not used on this site, but I find having the colour-scheme here convenient.  */
    --colour1: #81aee9 /* --colour1 */;
    --colour2: #dfeeff /* --colour2 */;
    --colour3: #c2ceb9 /* --colour3 */;
    --colour4: #bedd5a /* --colour4 */;
    --colour5: #ccf18d /* --colour5 */;
    --colour6: #718b3f /* --colour6 */;
    --nav-text: #333333 /* --nav-text */;
    --body-text: #111111 /* --body-text */;
    --unvisited-text: #00465c /* --unvisited-text */;
    --visited-text: #76027a /* --visited-text */;
}

body {
    min-height: 100vh;
    background-color: #718b3f /* --colour6 */;
    /* Browsers that don’t do gradients will use the jpeg background. */
    background-image: url(../images/gradient-background.jpg);
    background-size: 100% 100%;
    background-image: linear-gradient(
        #81aee9 /* --colour1 */,
        #dfeeff /* --colour2 */,
        #c2ceb9 /* --colour3 */,
        #bedd5a /* --colour4 */,
        #ccf18d /* --colour5 */,
        #718b3f /* --colour6 */
    );
    background-attachment: fixed;
    background-size: 100% 100vh;
    color: #111111 /* --body-text */;
}

body :focus {
    outline: dashed 2px #76027a /* --visited-text */;
}

section:not(.showcase-group) {
    line-height: 1.5;
}

section:not(.showcase-group) a {
    text-decoration: underline;
}

section:not(.showcase-group) a:link {
    color: #00465c /* --unvisited-text */;
}

section:not(.showcase-group) :not(:visited):focus {
    outline-color: #00465c /* --unvisited-text */;
}

section:not(.showcase-group) a:visited {
    color: #76027a /* --visited-text */;
}

section:not(.showcase-group) a:hover {
    color: #718b3f /* --colour6 */;
    text-decoration: none;
    border-bottom: 1px thin;
}

section:not(.showcase-group) :hover:focus {
    outline-color: #718b3f /* --colour6 */;
}

.anchor {
    display: inline-block;
    width: 0;
    height: 0;
    line-height: 0;
    transform: translateY(-22px);
    transform: translateY(calc(2px - 1rem));
}

*:not(.main-image).hidden {
    display: none;
}

/* IE gives a margin by default, which we don’t want. */
figure {
    margin: 0;
}

/* Applies to <h1> and the non-icon part of the GitHub links on the project showcase.
Having exactly one <h1> on a page is good for accessibility, but conflicts with my layout, so I hide it from sighted users.
Screenreaders will read the words eg “More about me” or “Cyberpet code”, but sighted users won’t.
Taken from https://webaim.org/techniques/css/invisiblecontent/ */
.screenreader-only {
    position: absolute;
    left: -10000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

section {
    padding: 0;
    margin: 0;
}

h2 {
    font-size: 84px;
    font-size: 3.5rem;
    font-weight: normal;
    font-weight: 400;
    z-index: 1;
    text-align: right;
    color: #3c381d; /* Overruled if intersection observer exists, or in showcase. */
}

/* This selector is for adding an arrow after external links inside sections. */
section p:not(.img-container) a[href^="http"]:not([href*="duncanritchie.co.uk"])::after {
    content: "↗";
    vertical-align: super;
    font-size: 60%;
    padding-left: 3.6pt;
    padding-left: 0.15rem;
    /* Remove the underline. We can’t do `text-decoration: none;` because the underline
    for the entire <a> element would still extend under the ::after pseudo-element. */
    clip-path: polygon(0 0, 100% 0, 100% 76%, 0 76%);
    /* Aside: `display: inline-block;` would also remove the underline, but would allow 
    a line-break to appear before the pseudo-element. */
}

section .img-container {
    padding-top: 24px;
    padding-top: 1rem;
    text-align: right;
}

section .img-container img {
    width: 240px;
    width: 10rem;
}

@media screen and (min-width: 625px) {
    .has-intersection-observer h2 {
        padding-top: 12px;
        padding-top: 0.5rem;
        right: 30px;
        right: 1.25rem;
        line-height: 110%;
        position: absolute;
        /* Browsers that don’t understand background-clip will show white text on a gradient-filled rectangle. */
        color: white;
        background: -webkit-linear-gradient(top, #111007, #58522c 33%);
        background: linear-gradient(180deg, #111007, #58522c 33%);
        /* The height of the gradient fill is not dependent on the height of the h2. */
        background-size: 100% 9.45rem;
        background-position: top;
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        -webkit-text-stroke: 0.02rem rgba(214, 233, 255, 0.8) /* --colour2 */;
        z-index: 1;
    }

    /* Gradient behind headings so their overlap over main images doesn’t cause a contrast problem. */
    .has-intersection-observer section:not(.showcase-group) h2::before {
        content: "";
        position: absolute;
        width: 100%;
        max-width: 100vw;
        right: 0;
        height: calc(100% - 1em) /* The -1em is because of ::after adding an excess line that must be removed. */;
        background-image: linear-gradient(180deg, rgba(255, 255, 255, 0), rgba(223, 238, 255, 0.6), rgba(223, 238, 255, 0.7) 80%, rgba(223, 238, 255, 0));
        z-index: 0;
        transform: translateX(0.35em);
        padding: 0 0.4em;
        overflow: hidden;
        mix-blend-mode: darken;
        clip-path: polygon(0 0, 100% 0, 100% 100%, 0.75vw 100%);
    }

    /* Hack to stop background-clip cutting off the descenders of the last line of the h2. */
    /* This would happen when descenders extended beyond the line-height. */
    /* \00000a is a newline, therefore the last line of the h2 is no longer the last line. */
    /* The space after the newline is non-breaking; the newline would be ignored without it. */
    .has-intersection-observer h2::after {
        content: "\00000a ";
        white-space: pre;
        white-space: pre-wrap;
    }

    .has-intersection-observer section:not(.showcase-group) h2 + p {
        padding-top: 228px;
        padding-top: 9.5rem;
    }
}

/* When headings wrap onto two lines, the paragraphs following them need to be moved down
explicitly because the headings are positioned absolutely and are therefore out of flow.
The max-width values here are defined by where wrapping occurs (in Firefox), determined
by the text & font. The min-width is the threshold between “mobile” and “desktop” view. */
@media screen and (min-width: 625px) and (max-width: 722px) {
    .has-intersection-observer #home-section h2 + p {
        padding-top: 11.5rem;
    }
}
@media screen and (min-width: 625px) and (max-width: 1200px) {
    .has-intersection-observer #velut-section h2 + p {
        padding-top: 11.5rem;
    }
}
@media screen and (min-width: 625px) and (max-width: 928px) {
    .has-intersection-observer #tiq-section h2 + p {
        padding-top: 11.5rem;
    }
}

/* CSS for the 404 page. */

#four-o-four-section {
    margin: unset;
    margin-left: auto;
    margin-right: auto;
    max-width: 56rem;
    min-height: unset;
}

#four-o-four-section h2 {
    position: relative;
    margin-top: 3rem;
    margin-bottom: -2rem;
}

#four-o-four-section h2::before {
    background-image: none;
}

#four-o-four-section p {
    padding-left: 0.75rem; padding-right: 0.75rem; 
}

#four-o-four-section p:first-of-type {
    padding-top: 0.5rem;
}

